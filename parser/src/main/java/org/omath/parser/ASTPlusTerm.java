/* Generated By:JJTree: Do not edit this line. ASTPlusTerm.java */

package org.omath.parser;

 class ASTPlusTerm extends FullFormNode {
  public ASTPlusTerm(int id) {
    super(id);
    setHead("Times");
  }

  public ASTPlusTerm(SyntaxParserImpl p, int id) {
    super(p, id);
  }

@Override
public void jjtClose(){
	super.jjtClose();
	
	//here we need to clean up the minuses that were possibly added 
	//upon creation of this node. we are only supposed to be created if the Arity >1
	//so we expect minuses. if the actual term (the last child) is a raw number, we flip its sign
	//and if there are no more terms we clone that child
	assert(children.size()>1);
	Node n =children.get(children.size()-1); 
	if(n instanceof ASTMyInteger ){
		ASTMyInteger integer = (ASTMyInteger)n;
		integer.setValue( integer.getIntegerValue()*(-1));
		children.set(children.size()-1,integer);
		children.remove(0);
	}
	if(children.size()==1){
		replaceByOnlyChild();
	}
	
}

  
  
}